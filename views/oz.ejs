<!DOCTYPE html>
<html>
<head>
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
  <link REL="icon" HREF="images/ec_fav.png">

  <link href="/maps/documentation/javascript/examples/default.css" rel="stylesheet">
  <style type="text/css">
  html { height: 100% }
  body { height: 100%; margin: 0; padding: 0 font-size:14px;}
  #map-canvas { 
   height: 100%;
   position:absolute;
   top:0;
   bottom:0;
   left:0;
   right:0;
   z-index:0;
 }

 .header{

   top:0;
   height:100px;
   background-color:#3cc07d;
   position:absolute;
   z-index:1;
   width:100%;
 }

 .footer {
  height: 75px;
  bottom: 0px;
  background-color: #D4F2B7;
  position: fixed;
  width:100%; /*Needs a width, since it is ABSOLUTE, and out of flow-SD*/
  background-image: url("hf_bg1.png");
  box-shadow: 0px -7px 7px -7px black;
}

.footer .center{
 font-family: "Sintony", sans-serif;
 font-size:10px;
 text-align:center;
 display:block;
 margin-left:auto;
 margin-right:auto;
 width:800px;
 padding-top:20px;
}

.footer .right{
	float:right;
	padding:10px;
	position:absolute;
	right:0px;
	top:0;
}

.footerCap {
	height: 3px;
	width: 100%;
	background-color: #009966;
	top: 0px;
	position: absolute;
}

</style>
<script type="text/javascript"
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBiBrP_9Co9dZnb4GuwKZK84VlKmJrHsjk&sensor=false">
</script>
<script type="text/javascript"
src="http://maps.googleapis.com/maps/api/geocode/json?address=82+Lees+Creek+Rd+Asheville+NC&sensor=true">
</script>
<script type="text/javascript">
var geocoder;
var map;

      /**
       * The HomeControl adds a control to the map that simply
       * returns the user to Chicago. This constructor takes
       * the control DIV as an argument.
       */

       function HomeControl(controlDiv, map) {

        // Set CSS styles for the DIV containing the control
        // Setting padding to 5 px will offset the control
        // from the edge of the map
        controlDiv.style.padding = "5px";

        // Set CSS for the control border
        var controlUI = document.createElement("div");
        controlUI.style.backgroundColor = "white";
        controlUI.style.borderStyle = "solid";
        controlUI.style.borderWidth = "2px";
        controlUI.style.cursor = "pointer";
        controlUI.style.textAlign = "center";
        controlUI.title = "Click to set the map to Home";
        controlDiv.appendChild(controlUI);

        // Set CSS for the control interior
        var controlText = document.createElement("div");
        controlText.style.fontFamily = "Arial,sans-serif";
        controlText.style.fontSize = "12px";
        controlText.style.paddingLeft = "4px";
        controlText.style.paddingRight = "4px";
        controlText.innerHTML = "<b>Home</b>";
        controlUI.appendChild(controlText);

        // Setup the click event listeners: simply set the map to
        // Chicago
        google.maps.event.addDomListener(controlUI, "click", function() {
          map.setCenter(codeAddress())
        });

      }
      
      function initialize() {
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(35.614945, -82.566389);
        var styles = [
        { "featureType": "road", "elementType": "geometry.fill", "stylers": [ { "color": "#f8c340" } ] },{ "featureType": "road", "elementType": "labels.text.fill", "stylers": [ { "color": "#292929" } ] },{ "elementType": "labels.text.stroke", "stylers": [ { "invert_lightness": true } ] }];
        var mapOptions = {
          zoom: 30,
          center: latlng,
          disableDefaultUI: true,
          mapTypeId: google.maps.MapTypeId.HYBRID        
        }
        map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
        map.setOptions({styles:styles});
        map.setTilt(45);
        
        
        //SD - contentString sets up the inner HTML for the info window attached to the centerd marker
        //All lines created below can be written as simple html
        //Be sure that all lines end in "+" otherwise a return will break the variable and the text will not be displayed.
        
        var contentString = "<div id="content">"+
        "<div id="siteNotice">"+
        "</div>"+
        "<h1 id="firstHeading" class="firstHeading">Good News!</h1>"+
        "<div id="bodyContent">"+
        "<p>The Wizard has determined the location for your perfect home:</p>" +
        "<p>" + address + "</p>"+
        "<p>Based on your performance in the test the wizard has determined " +
        "that you are <strong><em>not</em></strong> a good fit for OZ. "+
        "The reason given by the Wizard is:</p> "+
        "<h3>There is no place like home.</h3>"+
        "<p>Be aware that this decision is final and binding.  <em>Emerald City Real Estate&trade;</em>"+
        "supports the decision made by the Wizard, and this cannot be contested.</p>"+
        "<p>Please return to the main conference area by returning to the emerald gate.</p> "+
        "</div>"+
        "</div>";

        var infowindow = new google.maps.InfoWindow({
          content: contentString
        });

        var marker = new google.maps.Marker({
          position: latlng,
          map: map,
          title: "Results from the Wizard",
          animation: google.maps.Animation.DROP
        });
        
        infowindow.open(map,marker);

        
        
        // Create the DIV to hold the control and
        // call the HomeControl() constructor passing
        // in this DIV.
        var homeControlDiv = document.createElement("div");
        var homeControl = new HomeControl(homeControlDiv, map);

        homeControlDiv.index = 1;
        map.controls[google.maps.ControlPosition.TOP_RIGHT].push(homeControlDiv);
      }

      function codeAddress() {
      	
        var address = document.getElementById("address").value;
        geocoder.geocode( { "address": address}, function(results, status) {
          if (status == google.maps.GeocoderStatus.OK) {
            map.setCenter(results[0].geometry.location);
            
            var marker = new google.maps.Marker({
              map: map,
              title: "Results from the wizard",
              position: results[0].geometry.location
            });
            //SD - contentString sets up the inner HTML for the info window attached to the centerd marker
        //All lines created below can be written as simple html
        //Be sure that all lines end in "+" otherwise a return will break the variable and the text will not be displayed.
        
        
        
        var contentString = "<div id="content">"+
        "<div id="siteNotice">"+
        "</div>"+
        "<h1 id="firstHeading" class="firstHeading">Good News!</h1>"+
        "<div id="bodyContent">"+
        "<p>The Wizard has determined the location for your perfect home:</p>" +
        "<p><h1>" + address + "</h1></p>"+
        "<p>Based on your performance in the test the wizard has determined" +
        "that you are not a good fit for OZ. "+
        "The reason given by the Wizard is:</p> "+
        "<h3>There is no place like home.</h3>"+
        "<p>Be aware that this decision is final and binding.  <em>Emerald City Real Estate&trade;</em>"+
        "supports the decision made by the Wizard, and this cannot be contested.</p>"+
        "<p>Please return to the main conference area by returning to the emerald gate.</p> "+
        "</div>"+
        "</div>";

        var infowindow = new google.maps.InfoWindow({
          content: contentString, 
        });

        
        infowindow.open(map,marker);

      } else {
        alert("Geocode was not successful for the following reason: " + status);
      }
    });
}

</script>
</head>
<body onload="initialize()">

  <div style="position:absolute; z-index:2">
    <input id="address" type="textbox" value="">
    <input type="button" value="Geocode" onclick="codeAddress()" onReturn="codeAddress()">
  </div>
  <div id="map-canvas" ></div>
  <div class="footerCap"></div>

  
  <div class="footer">

   <div class="center">
     Emerald City Real Estate&trade; is a realogy company owned by Oz Properties&trade;, a subsidiary of Munchkin Real Funding.</br>
     ECRE&trade; is not responsible for any hazards related to the sale or occupation of homes purchased within the Emerald City or any of its surrounding areas</br>
     &copy;2013</br>
   </div>

   <div class="right">
     <img src="realtor.png">
     <img src="equal.png">
   </div>

   <div class="footerCap"></div>
 </div>
</body>
</html>